#project zero Makefile


#(READY) for convenience, define variable $(OBJS) to list of object files
OBJS= tokenizer.o history.o main_ui.o

#-------------------------------------------------------------------------------------------------
# make has a "default rule" specifying how to build a an "object" file (.o) from a C source file (.c)
#            this rule includes $(CFLAGS) as one of cc's parameters 
CFLAGS=-g -O3 # -g for debug, -O3 for optimization

# first target is built by default.  Usually named "all"
all: asciidraw

# asciidraw (target) depends on all object files (prerequisites)
asciidraw: $(OBJS) 
	cc -o asciidraw $(CFLAGS) $(OBJS)

# all object files built from c files that include draw.h
$(OBJS): draw.h
#--------------------------------------------------------------------------------------------------

#compiles tokenizer
tokenizer: tokenizer.c tokenizer.h
	gcc -c tokenizer.c

#compiles history
history: history.c history.h
	gcc -c history.c

#compiles main_ui
main_ui: main_ui.c main_ui.h
	gcc -c main_ui.c


# (READY) deletes files generated by compilation
clean:
	rm -f *.o *.c~

run:asciidraw
	./asciidraw
